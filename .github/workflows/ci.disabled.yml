name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y qtbase5-dev libqt5core5a build-essential cmake ninja-build
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e ".[dev]"
      continue-on-error: false
    
    - name: Lint with flake8
      run: |
        flake8 alphascrabble/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 alphascrabble/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    
    - name: Check code formatting
      run: |
        black --check alphascrabble/ tests/
        isort --check-only alphascrabble/ tests/
    
    - name: Type check with mypy
      run: |
        mypy alphascrabble/ --ignore-missing-imports
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=alphascrabble --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        cache: 'pip'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y qtbase5-dev libqt5core5a build-essential cmake ninja-build
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  colab-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        cache: 'pip'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y qtbase5-dev libqt5core5a build-essential cmake ninja-build
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    
    - name: Test Colab notebook
      run: |
        pip install nbconvert
        jupyter nbconvert --to python colab/AlphaScrabble_Colab.ipynb --stdout > /dev/null
        echo "Notebook syntax is valid"
    
    - name: Test basic functionality
      run: |
        python -c "
        from alphascrabble import Board, Tile, TileBag
        from alphascrabble.nn.model import AlphaScrabbleNet
        from alphascrabble.engine.features import FeatureExtractor
        
        # Test basic components
        board = Board()
        tile_bag = TileBag()
        model = AlphaScrabbleNet()
        extractor = FeatureExtractor()
        
        print('âœ… All components imported successfully')
        print(f'Board size: {len(board.grid)}x{len(board.grid[0])}')
        print(f'Model parameters: {sum(p.numel() for p in model.parameters())}')
        "
